---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prowlarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      prowlarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/prowlarr
              tag: 1.30.2.4939@sha256:4917f6ce056b71e6333d14cb2591d679e782ad148bb18f267c80ef5840a6dccb
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: &port 9896
                  initialDelaySeconds: 45
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                memory: 100Mi
                cpu: 10m
              limits:
                memory: 500Mi
                cpu: 200m
            env:
              - name: TZ
                value: America/New_York
              - name: PROWLARR__APP__INSTANCENAME
                value: Prowlarr
              - name: PROWLARR__AUTH__METHOD
                value: External
              - name: PROWLARR__AUTH__REQUIRED
                value: DisabledForLocalAddress
              - name: PROWLARR__AUTH__APIKEY
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-secret
                    key: api_key
              - name: PROWLARR__SERVER__PORT
                value: *port
              - name: PROWLARR__POSTGRES__HOST
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-secret
                    key: db_host
              - name: PROWLARR__POSTGRES__PORT
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-secret
                    key: db_port
              - name: PROWLARR__POSTGRES__USER
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-secret
                    key: db_user
              - name: PROWLARR__POSTGRES__PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-secret
                    key: db_pass
              - name: PROWLARR__POSTGRES__MAINDB
                valueFrom:
                  secretKeyRef:
                    name: prowlarr-secret
                    key: db_main
              - name: PROWLARR__LOG__DBENABLED
                value: "False"
              - name: PROWLARR__LOG__LEVEL
                value: info
            securityContext:
              runAsNonRoot: true
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: OnRootMismatch
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
              seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: prowlarr
        ports:
          http:
            port: *port

    ingress:
      app:
        className: "internal"
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "filmstrip"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</body>' '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/prowlarr/nord.css"></body>';
            sub_filter_once on;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        type: emptyDir
      tmp:
        type: emptyDir
      media:
        type: nfs
        server: nas-2.lan
        path: /volume1/Media
        globalMounts:
          - path: /media
