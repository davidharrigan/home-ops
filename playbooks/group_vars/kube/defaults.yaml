---
talos_version: v1.5.2
k8s_version: v1.28.1
talos_dir: "{{[ playbook_dir, '..', 'talos '] | path_join | trim }}"
manifests_dir: "{{ talos_dir }}/manifests"

defaults:
  # Default configuration for all machines.
  machine:
    # The `token` is used by a machine to join the PKI of the cluster.
    token: "{{ secrets.machine.token }}"
    certSANs:
      - "{{ ansible_host }}"
    # Used to provide additional options to the kubelet.
    kubelet:
      # The `image` field is an optional reference to an alternative kubelet image.
      image: ghcr.io/siderolabs/kubelet:{{ k8s_version }}
      # Enable container runtime default Seccomp profile.
      defaultRuntimeSeccompProfileEnabled: true
      # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
      disableManifestsDirectory: true
      extraArgs:
        rotate-server-certificates: true
      extraMounts:
        # mount /var/local to kubelet used by mayastor so it gets propagated to the containers correctly
        - destination: /var/local
          type: bind
          source: /var/local
          options:
            - rbind
            - rshared
            - rw
    # Provides machine specific network configuration options.
    network:
      # The hostname of the machine.
      hostname: "{{ inventory_hostname }}"
      interfaces:
        # The interface name.
        - interface: eth0
          dhcp: true
    # Used to provide instructions for installations.
    install:
      # The disk used for installations.
      disk: /dev/sda
      # Allows for supplying the image used to perform the installation.
      image: ghcr.io/siderolabs/installer:{{ talos_version }}
      # Indicates if the installation disk should be wiped at installation time.
      wipe: false
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # Features describe individual Talos features that can be switched on or off.
    features:
      rbac: true # Enable role-based access control (RBAC).
      stableHostname: true # Enable stable default hostname.
      apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
      diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
      kubePrism:
        enabled: true
        port: 7445
  # Provides cluster specific configuration options.
  cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: "{{ secrets.cluster.id }}"
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: "{{ secrets.cluster.secret }}"
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: "{{ secrets.cluster.bootstraptoken }}"
    # Provides control plane specific configuration options.
    controlPlane:
      # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
      endpoint: "https://{{ cluster_endpoint }}:6443"
    # The base64 encoded root certificate authority used by Kubernetes.
    # ca:
    #   crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVMrZ0F3SUJBZ0lRVklGRFBZa0hqUDNHNXhsMnlTaXVaekFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSXpNRGt3TkRFMU1EQXlNVm9YRFRNek1Ea3dNVEUxTURBeQpNVm93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCT2hIMzR5cmZ0dUNnL2Q0dGF0b3psUW5IdG5JY1N2Q2JjZ1VDZDE3TmI3YVNXOGVxSWgyZnRWdXJLSUIKSWNCbiswcEt2dEdSbzArdTczb0pDLzZJK1J5allUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVU5dmRIV1NMNzM1TUYrbkJOVFFFQzM5SmRrTkl3Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loQVBsNG9USk8KODM4VW5oL0hRb1hJNW1scWNETCtZSDRwd1JEeGtZZHlTVFo4QWlFQTUyOW5rek1GM0ZJVWxVdnRHeGxFNVloaAprL1FEblFqQUMzUnM4a0t0UXpnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    # Provides cluster specific network configuration options.
    network:
      cni:
        name: none
      # The domain used by Kubernetes DNS.
      dnsDomain: cluster.local
      # The pod subnet CIDR.
      podSubnets:
        - 10.244.0.0/16
      # The service subnet CIDR.
      serviceSubnets:
        - 10.96.0.0/12
    # Configures cluster member discovery.
    discovery:
      # Enable the cluster membership discovery feature.
      enabled: true
      # Configure registries used for cluster member discovery.
      registries:
        # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
        kubernetes:
          # Disable Kubernetes discovery registry.
          disabled: true
        # Service registry is using an external service to push and pull information about cluster members.
        service: {}
        # # External service endpoint.
        # endpoint: https://discovery.talos.dev/
