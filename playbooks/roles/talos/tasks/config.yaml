---
- name: generate controlplane machineconfig vars
  set_fact:
    kube: "{{ defaults | combine(controlplane, recursive=True) | combine(kube | default({}), recursive=True) }}"
  when: "'kube-control-plane' in group_names"

- name: generate worker machineconfig vars
  set_fact:
    kube: "{{ defaults | combine(worker, recursive=True) | combine(kube | default({}), recursive=True) }}"
  when: "'kube-worker' in group_names"

- name: create a directory for inline manifests
  file:
    path: "{{ manifests_dir }}/{{ item.name }}"
    state: directory
  delegate_to: 127.0.0.1
  no_log: true
  run_once: true
  with_items: "{{ inline_manifests }}"

- name: generate manifest files
  copy:
    content: "{{ item.1.contents | to_nice_yaml(indent=2, sort_keys=False) }}"
    dest: "{{ [ manifests_dir, item.0.name, item.1.name ] | path_join }}"
    mode: 0644
  no_log: true
  run_once: true
  delegate_to: 127.0.0.1
  with_subelements:
    - "{{ inline_manifests }}"
    - files

- name: kustomize inline manifests
  shell:
    cmd: "kubectl kustomize --enable-helm {{ [ talos_dir, 'manifests', item.name ] | path_join }} > {{ [ talos_dir, 'manifests', item.name, 'manifest.yaml' ] | path_join }}"
  when: item.run == "kustomize"
  run_once: true
  # no_log: true
  delegate_to: 127.0.0.1
  with_items: "{{ inline_manifests }}"

- name: insert inline manifests
  set_fact:
    kube: "{{ kube | combine({'cluster': {'inlineManifests': [{'contents': lookup('file', manifests_dir + '/' + item.name + '/manifest.yaml') , 'name': item.name }] }}, list_merge='append', recursive=True) }}"
  with_items: "{{ inline_manifests }}"
  # no_log: true
  when: "'kube-control-plane' in group_names"

- name: generate talos config
  template:
    src: templates/talosconfig.j2
    dest: "{{ talos_dir }}/talosconfig"
  delegate_to: 127.0.0.1
  run_once: true

- name: generate machineconfig
  template:
    src: templates/machineconfig.yaml.j2
    dest: "{{ talos_dir }}/{{ inventory_hostname }}.yaml"
  delegate_to: 127.0.0.1
