---
- name: Ensure config directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - /etc/rancher/k3s
    - /etc/rancher/node

- name: Create manifests directory on first server
  file:
    path: /var/lib/rancher/k3s/server/manifests
    state: directory
    owner: root
    group: root
    mode: 0644
  when: ansible_hostname == hostvars[groups['server'][0]]['ansible_hostname']

- name: Install Kubernetes
  ansible.builtin.include_role:
    name: xanmanning.k3s
    public: true
  vars:
    k3s_state: installed

- name: Get Kubernetes config file
  run_once: true
  ansible.builtin.slurp:
    src: /etc/rancher/k3s/k3s.yaml
  register: kubeconfig_base64

- name: Write Kubernetes config file with the correct cluster address
  ansible.builtin.copy:
    content: "{{ kubeconfig_base64.content | b64decode | replace('127.0.0.1', vars['k3s_registration_address']) }}"
    dest: "{{ playbook_dir }}/../../kubeconfig"
    mode: 0644
  delegate_to: localhost
  run_once: true
  when: ansible_hostname == hostvars[groups['server'][0]]['ansible_hostname']

- name: Get contents of manifests folder
  find:
    paths: /var/lib/rancher/k3s/server/manifests
    file_type: file
  register: k3s_server_manifests

- name: Get sub dirs of manifests folder
  find:
    paths: /var/lib/rancher/k3s/server/manifests
    file_type: directory
  register: k3s_server_manifests_directories

- name: Remove manifests and folders that are only needed for bootstrapping cluster so k3s doesn't auto apply on start
  file:
    path: "{{ item.path }}"
    state: absent
  with_items:
    - "{{ k3s_server_manifests.files }}"
    - "{{ k3s_server_manifests_directories.files }}"
  loop_control:
    label: "{{ item.path }}"
